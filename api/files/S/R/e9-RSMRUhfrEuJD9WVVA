1624997762
7vHKVjmPpk%3A709548c48e55926f547af8086cd38780-4a0125ddf8fa95d64f17e461dc5346e5
s:21428:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:28:"http://www.yiiframework.com/";s:14:" * description";N;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:35:"Copyright (c) 2008 Yii Software LLC";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:36:"http://www.yiiframework.com/license/";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"4a0125ddf8fa95d64f17e461dc5346e5";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"yii.php";s:39:" phpDocumentor\Reflection\Php\File path";s:39:"vendor/yiisoft/yii2/messages/pt/yii.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13404:"<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

/**
 * Message translations.
 *
 * This file is automatically generated by 'yii message/extract' command.
 * It contains the localizable messages extracted from source code.
 * You may modify this file by translating the extracted messages.
 *
 * Each array element represents the translation (value) of a message (key).
 * If the value is empty, the message is considered as not translated.
 * Messages that no longer need translation will have their translations
 * enclosed between a pair of '@@' marks.
 *
 * Message string can be used with plural forms format. Check i18n section
 * of the guide for details.
 *
 * NOTE: this file must be saved in UTF-8 encoding.
 */
return [
    ' and ' => ' e ',
    '"{attribute}" does not support operator "{operator}".' => '"{attribute}" não suporta o operador "{operator}".',
    'Are you sure you want to delete this item?' => 'Tens a certeza que queres apagar este item?',
    'Condition for "{attribute}" should be either a value or valid operator specification.' => 'A condição para "{attribute}" tem de ser ou um valor ou uma especificação válida do operador.',
    'Only files with these MIME types are allowed: {mimeTypes}.' => 'Apenas ficheiros com este tipo de MIME são permitidos: {mimeTypes}.',
    'Operator "{operator}" must be used with a search attribute.' => 'O operador "{operator}" tem de ser usado com um atributo de pesquisa.',
    'Operator "{operator}" requires multiple operands.' => 'O operador "{operator}" requer vários operandos.',
    'Powered by {yii}' => 'Distribuído por {yii}',
    'The combination {values} of {attributes} has already been taken.' => 'A combinação {values} de {attributes} já está a ser utilizada.',
    'The format of {filter} is invalid.' => 'O formato de {filter} é inválido.',
    'The requested view "{name}" was not found.' => 'A visualização solicitada "{name}" não foi encontrada.',
    'Unknown alias: -{name}' => 'Alias desconhecido: -{name}',
    'Unknown filter attribute "{attribute}"' => 'Atributo de filtro desconhecido "{attribute}"',
    'View' => 'Vêr',
    'Yii Framework' => 'Yii Framework',
    'You should upload at least {limit, number} {limit, plural, one{file} other{files}}.' => 'A transferência deve ser pelo menos {limit, number} {limit, plural, one{ficheiro} other{ficheiros}}. ',
    'in {delta, plural, =1{a day} other{# days}}' => 'em {delta, plural, =1{um dia} other{# dias}}',
    'in {delta, plural, =1{a minute} other{# minutes}}' => 'em {delta, plural, =1{um minuto} other{# minutos}}',
    'in {delta, plural, =1{a month} other{# months}}' => 'em {delta, plural, =1{um mês} other{# meses}}',
    'in {delta, plural, =1{a second} other{# seconds}}' => 'em {delta, plural, =1{um segundo} other{# segundos}}',
    'in {delta, plural, =1{a year} other{# years}}' => 'em {delta, plural, =1{um ano} other{# anos}}',
    'in {delta, plural, =1{an hour} other{# hours}}' => 'em {delta, plural, =1{uma hora} other{# horas}}',
    'just now' => 'agora mesmo',
    '{attribute} contains wrong subnet mask.' => '{attribute} contém uma máscara de sub-rede errada.',
    '{attribute} is not in the allowed range.' => '{attribute} não está no alcance permitido.',
    '{attribute} must be a valid IP address.' => '{attribute} tem de ser um endereço IP válido.',
    '{attribute} must be an IP address with specified subnet.' => '{attribute} tem de ser um endereço IP com a sub-rede especificada.',
    '{attribute} must be equal to "{compareValueOrAttribute}".' => '{attribute} tem de ser igual a "{compareValueOrAttribute}".',
    '{attribute} must be greater than "{compareValueOrAttribute}".' => '{attribute} tem de ser maior que "{compareValueOrAttribute}".',
    '{attribute} must be greater than or equal to "{compareValueOrAttribute}".' => '{attribute} tem de ser maior ou igual a "{compareValueOrAttribute}".',
    '{attribute} must be less than "{compareValueOrAttribute}".' => '{attribute} tem de ser menor que "{compareValueOrAttribute}".',
    '{attribute} must be less than or equal to "{compareValueOrAttribute}".' => '{attribute} tem de ser menor ou igual a "{compareValueOrAttribute}".',
    '{attribute} must not be a subnet.' => '{attribute} não pode ser uma sub-rede.',
    '{attribute} must not be an IPv4 address.' => '{attribute} não pode ser um endereço IPv4.',
    '{attribute} must not be an IPv6 address.' => '{attribute} não pode ser um endereço IPv6.',
    '{attribute} must not be equal to "{compareValueOrAttribute}".' => '{attribute} não pode ser igual a "{compareValueOrAttribute}".',
    '{delta, plural, =1{1 day} other{# days}}' => '{delta, plural, =1{1 dia} other{# dias}}',
    '{delta, plural, =1{1 hour} other{# hours}}' => '{delta, plural, =1{1 hora} other{# horas}}',
    '{delta, plural, =1{1 minute} other{# minutes}}' => '{delta, plural, =1{1 minuto} other{# minutos}}',
    '{delta, plural, =1{1 month} other{# months}}' => '{delta, plural, =1{1 mês} other{# meses}}',
    '{delta, plural, =1{1 second} other{# seconds}}' => '{delta, plural, =1{1 segundo} other{# segundos}}',
    '{delta, plural, =1{1 year} other{# years}}' => '{delta, plural, =1{1 ano} other{# anos}}',
    '{delta, plural, =1{a day} other{# days}} ago' => '{delta, plural, =1{um dia} other{# dias}} atrás',
    '{delta, plural, =1{a minute} other{# minutes}} ago' => '{delta, plural, =1{um minuto} other{# minutos}} atrás',
    '{delta, plural, =1{a month} other{# months}} ago' => '{delta, plural, =1{um mês} other{# meses}} atrás',
    '{delta, plural, =1{a second} other{# seconds}} ago' => '{delta, plural, =1{um segundo} other{# segundos}} atrás',
    '{delta, plural, =1{a year} other{# years}} ago' => '{delta, plural, =1{um ano} other{# anos}} atrás',
    '{delta, plural, =1{an hour} other{# hours}} ago' => '{delta, plural, =1{uma hora} other{# horas}} atrás',
    '{nFormatted} B' => '{nFormatted} B',
    '{nFormatted} GB' => '{nFormatted} GB',
    '{nFormatted} GiB' => '{nFormatted} GiB',
    '{nFormatted} KB' => '{nFormatted} kB',
    '{nFormatted} KiB' => '{nFormatted} KiB',
    '{nFormatted} MB' => '{nFormatted} MB',
    '{nFormatted} MiB' => '{nFormatted} MiB',
    '{nFormatted} PB' => '{nFormatted} PB',
    '{nFormatted} PiB' => '{nFormatted} PiB',
    '{nFormatted} TB' => '{nFormatted} TB',
    '{nFormatted} TiB' => '{nFormatted} TiB',
    '{nFormatted} {n, plural, =1{byte} other{bytes}}' => '{nFormatted} {n, plural, =1{byte} other{bytes}}',
    '{nFormatted} {n, plural, =1{gibibyte} other{gibibytes}}' => '{nFormatted} {n, plural, =1{gibibyte} other{gibibytes}}',
    '{nFormatted} {n, plural, =1{gigabyte} other{gigabytes}}' => '{nFormatted} {n, plural, =1{gigabyte} other{gigabytes}}',
    '{nFormatted} {n, plural, =1{kibibyte} other{kibibytes}}' => '{nFormatted} {n, plural, =1{kibibyte} other{kibibytes}}',
    '{nFormatted} {n, plural, =1{kilobyte} other{kilobytes}}' => '{nFormatted} {n, plural, =1{kilobyte} other{kilobytes}}',
    '{nFormatted} {n, plural, =1{mebibyte} other{mebibytes}}' => '{nFormatted} {n, plural, =1{mebibyte} other{mebibytes}}',
    '{nFormatted} {n, plural, =1{megabyte} other{megabytes}}' => '{nFormatted} {n, plural, =1{megabyte} other{megabytes}}',
    '{nFormatted} {n, plural, =1{pebibyte} other{pebibytes}}' => '{nFormatted} {n, plural, =1{pebibyte} other{pebibytes}}',
    '{nFormatted} {n, plural, =1{petabyte} other{petabytes}}' => '{nFormatted} {n, plural, =1{petabyte} other{petabytes}}',
    '{nFormatted} {n, plural, =1{tebibyte} other{tebibytes}}' => '{nFormatted} {n, plural, =1{tebibyte} other{tebibytes}}',
    '{nFormatted} {n, plural, =1{terabyte} other{terabytes}}' => '{nFormatted} {n, plural, =1{terabyte} other{terabytes}}',
    '(not set)' => '(não definido)',
    'An internal server error occurred.' => 'Ocorreu um erro interno do servidor.',
    'Delete' => 'Apagar',
    'Error' => 'Erro',
    'File upload failed.' => 'O upload do ficheiro falhou.',
    'Home' => 'Página Inicial',
    'Invalid data received for parameter "{param}".' => 'Dados inválidos recebidos para o parâmetro “{param}”.',
    'Login Required' => 'Login Necessário.',
    'Missing required arguments: {params}' => 'Argumentos obrigatórios em falta: {params}',
    'Missing required parameters: {params}' => 'Parâmetros obrigatórios em falta: {params}',
    'No' => 'Não',
    'No results found.' => 'Não foram encontrados resultados.',
    'Only files with these extensions are allowed: {extensions}.' => 'Só são permitidos ficheiros com as seguintes extensões: {extensions}.',
    'Page not found.' => 'Página não encontrada.',
    'Please fix the following errors:' => 'Por favor, corrija os seguintes erros:',
    'Please upload a file.' => 'Por favor faça upload de um ficheiro.',
    'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => 'A exibir <b>{begin, number}-{end, number}</b> de <b>{totalCount, number}</b> {totalCount, plural, one{item} other{itens}}.',
    'The file "{file}" is not an image.' => 'O ficheiro “{file}” não é uma imagem.',
    'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => 'O ficheiro “{file}” é grande demais. O tamanho não pode exceder {formattedLimit}.',
    'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => 'O ficheiro “{file}” é pequeno demais. O tamanho não pode ser menor do que {formattedLimit}.',
    'The format of {attribute} is invalid.' => 'O formato de “{attribute}” é inválido.',
    'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'O ficheiro “{file}” é grande demais. A altura não pode ser maior do que {limit, number} {limit, plural, one{pixel} other{pixels}}.',
    'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'O ficheiro “{file}” é grande demais. A largura não pode ser maior do que {limit, number} {limit, plural, one{pixel} other{pixels}}.',
    'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'O ficheiro “{file}” é pequeno demais. A altura não pode ser menor do que {limit, number} {limit, plural, one{pixel} other{pixels}}.',
    'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'O ficheiro “{file}” é pequeno demais. A largura não pode ser menor do que {limit, number} {limit, plural, one{pixel} other{pixels}}.',
    'The verification code is incorrect.' => 'O código de verificação está incorreto.',
    'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'Total <b>{count, number}</b> {count, plural, one{item} other{itens}}.',
    'Unable to verify your data submission.' => 'Não foi possível verificar a sua submissão de dados.',
    'Unknown option: --{name}' => 'Opção desconhecida : --{name}',
    'Update' => 'Atualizar',
    'Yes' => 'Sim',
    'You are not allowed to perform this action.' => 'Você não está autorizado a realizar essa ação.',
    'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'Você pode fazer o upload de no máximo {limit, number} {limit, plural, one{ficheiro} other{ficheiros}}.',
    'the input value' => 'o valor de entrada',
    '{attribute} "{value}" has already been taken.' => '{attribute} “{value}” já foi atribuido.',
    '{attribute} cannot be blank.' => '“{attribute}” não pode ficar em branco.',
    '{attribute} is invalid.' => '“{attribute}” é inválido.',
    '{attribute} is not a valid URL.' => '“{attribute}” não é uma URL válida.',
    '{attribute} is not a valid email address.' => '“{attribute}” não é um endereço de e-mail válido.',
    '{attribute} must be "{requiredValue}".' => '“{attribute}” deve ser “{requiredValue}”.',
    '{attribute} must be a number.' => '“{attribute}” deve ser um número.',
    '{attribute} must be a string.' => '“{attribute}” deve ser uma string.',
    '{attribute} must be an integer.' => '“{attribute}” deve ser um número inteiro.',
    '{attribute} must be either "{true}" or "{false}".' => '“{attribute}” deve ser “{true}” ou “{false}”.',
    '{attribute} must be no greater than {max}.' => '“{attribute}” não pode ser maior do que {max}.',
    '{attribute} must be no less than {min}.' => '“{attribute}” não pode ser menor do que {min}.',
    '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '“{attribute}” deve conter pelo menos {min, number} {min, plural, one{caractere} other{caracteres}}.',
    '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '“{attribute}” deve conter no máximo {max, number} {max, plural, one{caractere} other{caracteres}}.',
    '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '“{attribute}” deve conter {length, number} {length, plural, one{caractere} other{caracteres}}.',
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";