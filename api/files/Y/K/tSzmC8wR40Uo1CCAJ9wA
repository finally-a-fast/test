1624927540
7vHKVjmPpk%3Ab06f8f28c0b189938c3d38534bf85311-3b279afad7598ed493068d8874a0c887
s:14168:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:28:"http://www.yiiframework.com/";s:14:" * description";N;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:35:"Copyright (c) 2008 Yii Software LLC";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:36:"http://www.yiiframework.com/license/";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"3b279afad7598ed493068d8874a0c887";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"yii.php";s:39:" phpDocumentor\Reflection\Php\File path";s:39:"vendor/yiisoft/yii2/messages/az/yii.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7960:"<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

/**
 * Message translations.
 *
 * This file is automatically generated by 'yii message/extract' command.
 * It contains the localizable messages extracted from source code.
 * You may modify this file by translating the extracted messages.
 *
 * Each array element represents the translation (value) of a message (key).
 * If the value is empty, the message is considered as not translated.
 * Messages that no longer need translation will have their translations
 * enclosed between a pair of '@@' marks.
 *
 * Message string can be used with plural forms format. Check i18n section
 * of the guide for details.
 *
 * NOTE: this file must be saved in UTF-8 encoding.
 */
return [
    '(not set)' => '(məlumat yoxdur)',
    'An internal server error occurred.' => 'Daxili server xətası meydana gəldi.',
    'Are you sure you want to delete this item?' => 'Bu elementi silmək istədiyinizə əminsinizmi?',
    'Delete' => 'Sil',
    'Error' => 'Xəta',
    'File upload failed.' => 'Fayl yüklənmədi.',
    'Home' => 'Ana səhifə',
    'Invalid data received for parameter "{param}".' => '"{param}" parametri üçün yalnış məlumat alındı.',
    'Login Required' => 'İstifadəçi girişi tələb olunur',
    'Missing required arguments: {params}' => 'Tələb olunan arqumentlər tapılmadı: {params}',
    'Missing required parameters: {params}' => 'Tələb olunan parametrlər tapılmadı: {params}',
    'No' => 'Xeyr',
    'No help for unknown command "{command}".' => 'Qeyri-müəyyən "{command}" əmri üçün kömək yoxdur.',
    'No help for unknown sub-command "{command}".' => 'Qeyri-müəyyən "{command}" sub-əmri üçün kömək yoxdur.',
    'No results found.' => 'Heç bir nəticə tapılmadı',
    'Only files with these MIME types are allowed: {mimeTypes}.' => 'Ancaq bu MIME tipli fayllara icazə verilib: {mimeTypes}.',
    'Only files with these extensions are allowed: {extensions}.' => 'Genişlənmələri ancaq bu tipdə olan fayllara icazə verilib: {extensions}.',
    'Page not found.' => 'Səhifə tapılmadı.',
    'Please fix the following errors:' => 'Xahiş olunur xətaları düzəldin: ',
    'Please upload a file.' => 'Xahiş olunur bir fayl yükləyin.',
    'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => '<b>{totalCount, number}</b> {totalCount, plural, one{elementdən} other{elementdən}} <b>{begin, number}-{end, number}</b> arası göstərilir.',
    'The file "{file}" is not an image.' => '"{file}" təsvir faylı deyil.',
    'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => '"{file}" faylı çox böyükdür. Həcmi {formattedLimit} qiymətindən böyük ola bilməz.',
    'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => '"{file}" faylı çox kiçikdir. Həcmi {formattedLimit} qiymətindən kiçik ola bilməz.',
    'The format of {attribute} is invalid.' => '{attribute} formatı düzgün deyil.',
    'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => '"{file}" şəkli çox böyükdür. Uzunluq {limit, plural, one{pixel} other{pixels}} qiymətindən böyük ola bilməz.',
    'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => '"{file}" şəkli çox böyükdür. Eni {limit, number} {limit, plural, one{pixel} other{pixel}} qiymətindən böyük ola bilməz.',
    'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => '"{file}" şəkli çox kiçikdir. Eni {limit, number} {limit, plural, one{pixel} other{pixel}} qiymətindən kiçik ola bilməz.',
    'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => '"{file}" şəkli çox kiçikdir. Eni {limit, number} {limit, plural, one{pixel} other{pixels}} qiymətindən kiçik ola bilməz.',
    'The verification code is incorrect.' => 'Təsdiqləmə kodu səhvdir.',
    'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'Toplam <b>{count, number}</b> {count, plural, one{element} other{element}}.',
    'Unable to verify your data submission.' => 'Təqdim etdiyiniz məlumat təsdiqlənmədi.',
    'Unknown command "{command}".' => 'Qeyri-müəyyən əmr "{command}".',
    'Unknown option: --{name}' => 'Qeyri-müəyyən seçim: --{name}',
    'Update' => 'Yenilə',
    'View' => 'Bax',
    'Yes' => 'Bəli',
    'You are not allowed to perform this action.' => 'Bu əməliyyatı yerinə yetirmək üçün icazəniz yoxdur.',
    'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'Ancaq {limit, number} {limit, plural, one{fayl} other{fayl}} yükləyə bilərsiniz.',
    'the input value' => 'daxil olunmuş qiymət',
    '{attribute} "{value}" has already been taken.' => '{attribute} "{value}" artıq istifadə olunub.',
    '{attribute} cannot be blank.' => '{attribute} boş qoyula bilməz.',
    '{attribute} is invalid.' => '{attribute} düzgün deyil.',
    '{attribute} is not a valid URL.' => '{attribute} düzgün URL deyil.',
    '{attribute} is not a valid email address.' => '{attribute} düzgün e-mail deyil.',
    '{attribute} must be "{requiredValue}".' => '{attribute} {requiredValue} olmalıdır.',
    '{attribute} must be a number.' => '{attribute} ədəd olmalıdır.',
    '{attribute} must be a string.' => '{attribute} simvol tipli olmalıdır.',
    '{attribute} must be an integer.' => '{attribute} tam ədəd olmalıdır.',
    '{attribute} must be either "{true}" or "{false}".' => '{attribute} ya {true} ya da {false} ola bilər.',
    '{attribute} must be greater than "{compareValue}".' => '{attribute}, "{compareValue}" dən böyük olmalıdır.',
    '{attribute} must be greater than or equal to "{compareValue}".' => '{attribute}, "{compareValue}"dən böyük və ya bərabər olmalıdır.',
    '{attribute} must be less than "{compareValue}".' => '{attribute}, "{compareValue}" dən kiçik olmalıdır.',
    '{attribute} must be less than or equal to "{compareValue}".' => '{attribute}, "{compareValue}"dən kiçik və ya bərabər olmalıdır.',
    '{attribute} must be no greater than {max}.' => '{attribute} {max} dən böyük olmamalıdır.',
    '{attribute} must be no less than {min}.' => '{attribute} {min} dən kiçik olmamalıdır.',
    '{attribute} must be repeated exactly.' => '{attribute} dəqiqliklə təkrar olunmalıdir.',
    '{attribute} must not be equal to "{compareValue}".' => '{attribute}, "{compareValue}" ilə eyni olmamalıdır',
    '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '{attribute} ən az {min, number} simvol olmalıdır.',
    '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '{attribute} ən çox {max, number} simvol olmalıdır.',
    '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '{attribute} {length, number} simvol olmalıdır.',
    '{n, plural, =1{# byte} other{# bytes}}' => '{n} Bayt',
    '{n, plural, =1{# gigabyte} other{# gigabytes}}' => '{n} Giqabayt',
    '{n, plural, =1{# kilobyte} other{# kilobytes}}' => '{n} Kilobayt',
    '{n, plural, =1{# megabyte} other{# megabytes}}' => '{n} Meqabayt',
    '{n, plural, =1{# petabyte} other{# petabytes}}' => '{n} Petabayt',
    '{n, plural, =1{# terabyte} other{# terabytes}}' => '{n} Terabayt',
    '{n} B' => '{n} B',
    '{n} GB' => '{n} GB',
    '{n} KB' => '{n} KB',
    '{n} MB' => '{n} MB',
    '{n} PB' => '{n} PB',
    '{n} TB' => '{n} TB',
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";