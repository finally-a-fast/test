1624927540
7vHKVjmPpk%3A5241422fc0179d1a5bb77efb21f10468-b0b1bc5f70cadd3d33697dfcec71ec15
s:20896:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:28:"http://www.yiiframework.com/";s:14:" * description";N;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:35:"Copyright (c) 2008 Yii Software LLC";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:36:"http://www.yiiframework.com/license/";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"b0b1bc5f70cadd3d33697dfcec71ec15";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"yii.php";s:39:" phpDocumentor\Reflection\Php\File path";s:39:"vendor/yiisoft/yii2/messages/et/yii.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13006:"<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

/**
 * Message translations.
 *
 * This file is automatically generated by 'yii message/extract' command.
 * It contains the localizable messages extracted from source code.
 * You may modify this file by translating the extracted messages.
 *
 * Each array element represents the translation (value) of a message (key).
 * If the value is empty, the message is considered as not translated.
 * Messages that no longer need translation will have their translations
 * enclosed between a pair of '@@' marks.
 *
 * Message string can be used with plural forms format. Check i18n section
 * of the guide for details.
 *
 * NOTE: this file must be saved in UTF-8 encoding.
 */
return [
    '(not set)' => '(määramata)',
    'An internal server error occurred.' => 'Ilmnes serveri sisemine viga.',
    'Are you sure you want to delete this item?' => 'Kas olete kindel, et soovite selle üksuse kustutada?',
    'Delete' => 'Kustuta',
    'Error' => 'Viga',
    'File upload failed.' => 'Faili üleslaadimine ebaõnnestus.',
    'Home' => 'Avaleht',
    'Invalid data received for parameter "{param}".' => 'Parameetri "{param}" jaoks võeti vastu sobimatud andmed.',
    'Login Required' => 'Vajalik on sisse logimine',
    'Missing required arguments: {params}' => 'Puuduvad nõutud argumendid: {params}',
    'Missing required parameters: {params}' => 'Puuduvad nõutud parameetrid: {params}',
    'No' => 'Ei',
    'No results found.' => 'Ei leitud ühtegi tulemust.',
    'Only files with these MIME types are allowed: {mimeTypes}.' => 'Lubatud on ainult nende MIME tüüpidega failid: {mimeTypes}.',
    'Only files with these extensions are allowed: {extensions}.' => 'Lubatud on ainult nende faililaienditega failid: {extensions}.',
    'Page not found.' => 'Lehekülge ei leitud.',
    'Please fix the following errors:' => 'Palun parandage järgnevad vead:',
    'Please upload a file.' => 'Palun laadige fail üles.',
    'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => 'Näitan <b>{totalCount, number}</b> {totalCount, plural, one{üksusest} other{üksusest}} <b>{begin, number}-{end, number}</b>.',
    'The file "{file}" is not an image.' => 'See fail "{file}" ei ole pilt.',
    'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => 'See fail "{file}" on liiga suur. Suurus ei tohi ületada {formattedLimit}.',
    'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => 'See fail "{file}" on liiga väike. Suurus ei tohi olla väiksem kui {formattedLimit}.',
    'The format of {attribute} is invalid.' => '{attribute} on sobimatus vormingus.',
    'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Pilt "{file}" on liiga suur. Kõrgus ei tohi olla suurem kui {limit, number} {limit, plural, one{piksel} other{pikslit}}.',
    'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Pilt "{file}" on liiga suur. Laius ei tohi olla suurem kui {limit, number} {limit, plural, one{piksel} other{pikslit}}.',
    'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Pilt "{file}" on liiga väike. Kõrgus ei tohi olla väiksem kui {limit, number} {limit, plural, one{piksel} other{pikslit}}.',
    'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Pilt "{file}" on liiga väike. Laius ei tohi olla väiksem kui {limit, number} {limit, plural, one{piksel} other{pikslit}}.',
    'The requested view "{name}" was not found.' => 'Soovitud vaadet "{name}" ei leitud.',
    'The verification code is incorrect.' => 'Kontrollkood on vale.',
    'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'Kokku <b>{count, number}</b> {count, plural, one{üksus} other{üksust}}.',
    'Unable to verify your data submission.' => 'Ei suuda edastatud andmete õigsuses veenduda.',
    'Unknown option: --{name}' => 'Tundmatu valik: --{name}',
    'Update' => 'Muuda',
    'View' => 'Vaata',
    'Yes' => 'Jah',
    'You are not allowed to perform this action.' => 'Teil pole õigust seda toimingut sooritada.',
    'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'Saate üles laadida kõige rohkem {limit, number} {limit, plural, one{faili} other{faili}}.',
    'in {delta, plural, =1{a day} other{# days}}' => '{delta, plural, =1{ühe päeva} other{# päeva}} pärast',
    'in {delta, plural, =1{a minute} other{# minutes}}' => '{delta, plural, =1{ühe minuti} other{# minuti}} pärast',
    'in {delta, plural, =1{a month} other{# months}}' => '{delta, plural, =1{ühe kuu} other{# kuu}} pärast',
    'in {delta, plural, =1{a second} other{# seconds}}' => '{delta, plural, =1{ühe sekundi} other{# sekundi}} pärast',
    'in {delta, plural, =1{a year} other{# years}}' => '{delta, plural, =1{ühe aasta} other{# aasta}} pärast',
    'in {delta, plural, =1{an hour} other{# hours}}' => '{delta, plural, =1{ühe tunni} other{# tunni}} pärast',
    'the input value' => 'sisendväärtus',
    '{attribute} "{value}" has already been taken.' => '{attribute} "{value}" on juba kasutuses.',
    '{attribute} cannot be blank.' => '{attribute} ei tohi olla tühi.',
    '{attribute} is invalid.' => '{attribute} on sobimatu.',
    '{attribute} is not a valid URL.' => '{attribute} ei ole korrektne URL.',
    '{attribute} is not a valid email address.' => '{attribute} ei ole korrektne e-posti aadress.',
    '{attribute} must be "{requiredValue}".' => '{attribute} peab olema "{requiredValue}".',
    '{attribute} must be a number.' => '{attribute} peab olema number.',
    '{attribute} must be a string.' => '{attribute} peab olema tekst.',
    '{attribute} must be an integer.' => '{attribute} peab olema täisarv.',
    '{attribute} must be either "{true}" or "{false}".' => '{attribute} peab olema kas "{true}" või "{false}".',
    '{attribute} must be no greater than {max}.' => '{attribute} ei tohi olla suurem kui {max}.',
    '{attribute} must be no less than {min}.' => '{attribute} ei tohi olla väiksem kui {min}.',
    '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '{attribute} peab sisaldama vähemalt {min, number} {min, plural, one{tähemärki} other{tähemärki}}.',
    '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '{attribute} tohib sisaldada maksimaalselt {max, number} {max, plural, one{tähemärki} other{tähemärki}}.',
    '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '{attribute} peab sisaldama {length, number} {length, plural, one{tähemärki} other{tähemärki}}.',
    '{delta, plural, =1{a day} other{# days}} ago' => '{delta, plural, =1{1 päev} other{# päeva}} tagasi',
    '{delta, plural, =1{a minute} other{# minutes}} ago' => '{delta, plural, =1{1 minut} other{# minutit}} tagasi',
    '{delta, plural, =1{a month} other{# months}} ago' => '{delta, plural, =1{kuu aega} other{# kuud}} tagasi',
    '{delta, plural, =1{a second} other{# seconds}} ago' => '{delta, plural, =1{1 sekund} other{# sekundit}} tagasi',
    '{delta, plural, =1{a year} other{# years}} ago' => '{delta, plural, =1{aasta} other{# aastat}} tagasi',
    '{delta, plural, =1{an hour} other{# hours}} ago' => '{delta, plural, =1{tund aega} other{# tundi}} tagasi',
    ' and ' => ' ja ',
    '"{attribute}" does not support operator "{operator}".' => '"{attribute}" ei toeta tehtemärki "{operator}".',
    'Condition for "{attribute}" should be either a value or valid operator specification.' => 'Atribuudi "{attribute}" tingimus peaks olema kas väärtus või korrektne tehtemärgi spetsifikatsioon.',
    'Operator "{operator}" must be used with a search attribute.' => 'Tehtemärki "{operator}" peab kasutama koos otsinguatribuudiga.',
    'Operator "{operator}" requires multiple operands.' => 'Tehtemärk "{operator}" nõuab mitut operandi.',
    'Powered by {yii}' => '',
    'The combination {values} of {attributes} has already been taken.' => 'Atribuutide {attributes} väärtuste kombinatsioon {values} on juba võetud.',
    'The format of {filter} is invalid.' => 'Filtri {filter} formaat on sobimatu.',
    'Unknown alias: -{name}' => 'Tundmatu alias: -{name}',
    'Unknown filter attribute "{attribute}"' => 'Tundmatu filtri atribuut "{attribute}"',
    'Yii Framework' => 'Yii raamistik',
    'You should upload at least {limit, number} {limit, plural, one{file} other{files}}.' => 'Peaksid üles laadima vähemalt {limit, number} {limit, plural, one{faili} other{faili}}.',
    'just now' => 'just nüüd',
    '{attribute} contains wrong subnet mask.' => '{attribute} sisaldab valet alamvõrgumaski.',
    '{attribute} is not in the allowed range.' => '{attribute} ei ole lubatud vahemikus.',
    '{attribute} must be a valid IP address.' => '{attribute} peab olema õige IP-aadress',
    '{attribute} must be an IP address with specified subnet.' => '{attribute} peab olema võrgumaskiga IP-aadress.',
    '{attribute} must be equal to "{compareValueOrAttribute}".' => '{attribute} peab olema "{compareValueOrAttribute}".',
    '{attribute} must be greater than "{compareValueOrAttribute}".' => '{attribute} peab olema suurem kui "{compareValueOrAttribute}".',
    '{attribute} must be greater than or equal to "{compareValueOrAttribute}".' => '{attribute} peab olema suurem või võrdne "{compareValueOrAttribute}".',
    '{attribute} must be less than "{compareValueOrAttribute}".' => '{attribute} peab olema väiksem kui "{compareValueOrAttribute}".',
    '{attribute} must be less than or equal to "{compareValueOrAttribute}".' => '{attribute} peab olema väiksem või võrdne "{compareValueOrAttribute}".',
    '{attribute} must not be a subnet.' => '{attribute} ei tohi olla alamvõrk.',
    '{attribute} must not be an IPv4 address.' => '{attribute} ei tohi olla IPv4 aadress.',
    '{attribute} must not be an IPv6 address.' => '{attribute} ei tohi olla IPv6 aadress.',
    '{attribute} must not be equal to "{compareValueOrAttribute}".' => '{attribute} ei tohi olla "{compareValueOrAttribute}".',
    '{delta, plural, =1{1 day} other{# days}}' => '{delta, plural, =1{1 päev} other{# päeva}}',
    '{delta, plural, =1{1 hour} other{# hours}}' => '{delta, plural, =1{1 tund} other{# tundi}}',
    '{delta, plural, =1{1 minute} other{# minutes}}' => '{delta, plural, =1{1 minut} other{# minutit}}',
    '{delta, plural, =1{1 month} other{# months}}' => '{delta, plural, =1{1 kuu} other{# kuud}}',
    '{delta, plural, =1{1 second} other{# seconds}}' => '{delta, plural, =1{1 sekund} other{# sekundit}}',
    '{delta, plural, =1{1 year} other{# years}}' => '{delta, plural, =1{1 aasta} other{# aastat}}',
    '{nFormatted} B' => '{nFormatted} B',
    '{nFormatted} GB' => '{nFormatted} GB',
    '{nFormatted} GiB' => '{nFormatted} GiB',
    '{nFormatted} KiB' => '{nFormatted} KiB',
    '{nFormatted} MB' => '{nFormatted} MB',
    '{nFormatted} MiB' => '{nFormatted} MiB',
    '{nFormatted} PB' => '{nFormatted} PB',
    '{nFormatted} PiB' => '{nFormatted} PiB',
    '{nFormatted} TB' => '{nFormatted} TB',
    '{nFormatted} TiB' => '{nFormatted} TiB',
    '{nFormatted} kB' => '{nFormatted} kB',
    '{nFormatted} {n, plural, =1{byte} other{bytes}}' => '{nFormatted} {n, plural, =1{bait} other{baiti}}',
    '{nFormatted} {n, plural, =1{gibibyte} other{gibibytes}}' => '{nFormatted} {n, plural, =1{gibibait} other{gibibaiti}}',
    '{nFormatted} {n, plural, =1{gigabyte} other{gigabytes}}' => '{nFormatted} {n, plural, =1{gigabait} other{gigabaiti}}',
    '{nFormatted} {n, plural, =1{kibibyte} other{kibibytes}}' => '{nFormatted} {n, plural, =1{kibibait} other{kibibaiti}}',
    '{nFormatted} {n, plural, =1{kilobyte} other{kilobytes}}' => '{nFormatted} {n, plural, =1{kilobait} other{kilobaiti}}',
    '{nFormatted} {n, plural, =1{mebibyte} other{mebibytes}}' => '{nFormatted} {n, plural, =1{mebibait} other{mebibaiti}}',
    '{nFormatted} {n, plural, =1{megabyte} other{megabytes}}' => '{nFormatted} {n, plural, =1{megabait} other{megabaiti}}',
    '{nFormatted} {n, plural, =1{pebibyte} other{pebibytes}}' => '{nFormatted} {n, plural, =1{pebibait} other{pebibaiti}}',
    '{nFormatted} {n, plural, =1{petabyte} other{petabytes}}' => '{nFormatted} {n, plural, =1{petabait} other{petabaiti}}',
    '{nFormatted} {n, plural, =1{tebibyte} other{tebibytes}}' => '{nFormatted} {n, plural, =1{tebibait} other{tebibaiti}}',
    '{nFormatted} {n, plural, =1{terabyte} other{terabytes}}' => '{nFormatted} {n, plural, =1{terabait} other{terabaiti}}',
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";