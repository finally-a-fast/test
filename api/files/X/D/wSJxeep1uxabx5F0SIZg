1624997762
7vHKVjmPpk%3A100d85e56f54db8920bd108a3f8abd02-aed1cf6fac6d0e7c9636eeaa1ff0f12c
s:15996:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:28:"http://www.yiiframework.com/";s:14:" * description";N;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:35:"Copyright (c) 2008 Yii Software LLC";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:36:"http://www.yiiframework.com/license/";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"aed1cf6fac6d0e7c9636eeaa1ff0f12c";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"yii.php";s:39:" phpDocumentor\Reflection\Php\File path";s:39:"vendor/yiisoft/yii2/messages/da/yii.php";s:41:" phpDocumentor\Reflection\Php\File source";s:9332:"<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

/**
 * Message translations.
 *
 * This file is automatically generated by 'yii message/extract' command.
 * It contains the localizable messages extracted from source code.
 * You may modify this file by translating the extracted messages.
 *
 * Each array element represents the translation (value) of a message (key).
 * If the value is empty, the message is considered as not translated.
 * Messages that no longer need translation will have their translations
 * enclosed between a pair of '@@' marks.
 *
 * Message string can be used with plural forms format. Check i18n section
 * of the guide for details.
 *
 * NOTE: this file must be saved in UTF-8 encoding.
 */
return [
  '(not set)' => '(ikke defineret)',
  'An internal server error occurred.' => 'Der opstod en intern server fejl.',
  'Are you sure you want to delete this item?' => 'Er du sikker på, at du vil slette dette element?',
  'Delete' => 'Slet',
  'Error' => 'Fejl',
  'File upload failed.' => 'Upload af fil fejlede.',
  'Home' => 'Start',
  'Invalid data received for parameter "{param}".' => 'Ugyldig data modtaget for parameteren "{param}".',
  'Login Required' => 'Login Påkrævet',
  'Missing required arguments: {params}' => 'Påkrævede argumenter mangler: {params}',
  'Missing required parameters: {params}' => 'Påkrævede parametre mangler: {params}',
  'No' => 'Nej',
  'No help for unknown command "{command}".' => 'Ingen hjælp til ukendt kommando "{command}".',
  'No help for unknown sub-command "{command}".' => 'Ingen hjælp til ukendt under-kommando "{command}".',
  'No results found.' => 'Ingen resultater fundet.',
  'Only files with these MIME types are allowed: {mimeTypes}.' => 'Kun filer med følgende MIME-typer er tilladte: {mimeTypes}.',
  'Only files with these extensions are allowed: {extensions}.' => 'Kun filer med følgende filtyper er tilladte: {extensions}.',
  'Page not found.' => 'Siden blev ikke fundet.',
  'Please fix the following errors:' => 'Ret venligst følgende fejl:',
  'Please upload a file.' => 'Venligst upload en fil.',
  'Showing <b>{begin, number}-{end, number}</b> of <b>{totalCount, number}</b> {totalCount, plural, one{item} other{items}}.' => 'Viser <b>{begin, number}-{end, number}</b> af <b>{totalCount, number}</b> {totalCount, plural, one{element} other{elementer}}.',
  'The file "{file}" is not an image.' => 'Filen "{file}" er ikke et billede.',
  'The file "{file}" is too big. Its size cannot exceed {formattedLimit}.' => 'Filen "{file}" er for stor. Størrelsen må ikke overstige {formattedLimit}.',
  'The file "{file}" is too small. Its size cannot be smaller than {formattedLimit}.' => 'Filen "{file}" er for lille. Størrelsen må ikke være mindre end {formattedLimit}.',
  'The format of {attribute} is invalid.' => 'Formatet af {attribute} er ugyldigt.',
  'The image "{file}" is too large. The height cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Billedet "{file}" er for stort. Højden må ikke være større end {limit, number} {limit, plural, one{pixel} other{pixels}}.',
  'The image "{file}" is too large. The width cannot be larger than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Billedet "{file}" er for stort. Bredden må ikke være større end {limit, number} {limit, plural, one{pixel} other{pixels}}.',
  'The image "{file}" is too small. The height cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Billedet "{file}" er for lille. Højden må ikke være mindre end {limit, number} {limit, plural, one{pixel} other{pixels}}.',
  'The image "{file}" is too small. The width cannot be smaller than {limit, number} {limit, plural, one{pixel} other{pixels}}.' => 'Billedet "{file}" er for lille. Bredden må ikke være mindre end {limit, number} {limit, plural, one{pixel} other{pixels}}.',
  'The requested view "{name}" was not found.' => 'Den ønskede visning "{name}" blev ikke fundet.',
  'The verification code is incorrect.' => 'Verifikationskoden er ikke korrekt.',
  'Total <b>{count, number}</b> {count, plural, one{item} other{items}}.' => 'Total <b>{count, number}</b> {count, plural, one{element} other{elementer}}.',
  'Unable to verify your data submission.' => 'Kunne ikke verificere din data indsendelse.',
  'Unknown command "{command}".' => 'Ukendt kommando "{command}".',
  'Unknown option: --{name}' => 'Ukendt option: --{name}',
  'Update' => 'Opdatér',
  'View' => 'Vis',
  'Yes' => 'Ja',
  'You are not allowed to perform this action.' => 'Du har ikke tilladelse til at udføre denne handling.',
  'You can upload at most {limit, number} {limit, plural, one{file} other{files}}.' => 'Du kan højst uploade {limit, number} {limit, plural, one{fil} other{filer}}.',
  'in {delta, plural, =1{a day} other{# days}}' => 'om {delta, plural, =1{en dag} other{# dage}}',
  'in {delta, plural, =1{a minute} other{# minutes}}' => 'om {delta, plural, =1{et minut} other{# minutter}}',
  'in {delta, plural, =1{a month} other{# months}}' => 'om {delta, plural, =1{en måned} other{# måneder}}',
  'in {delta, plural, =1{a second} other{# seconds}}' => 'om {delta, plural, =1{et sekund} other{# sekunder}}',
  'in {delta, plural, =1{a year} other{# years}}' => 'om {delta, plural, =1{et år} other{# år}}',
  'in {delta, plural, =1{an hour} other{# hours}}' => 'om {delta, plural, =1{en time} other{# timer}}',
  'the input value' => 'inputværdien',
  '{attribute} "{value}" has already been taken.' => '{attribute} "{value}" er allerede i brug.',
  '{attribute} cannot be blank.' => '{attribute} må ikke være tom.',
  '{attribute} is invalid.' => '{attribute} er ugyldig.',
  '{attribute} is not a valid URL.' => '{attribute} er ikke en gyldig URL.',
  '{attribute} is not a valid email address.' => '{attribute} er ikke en gyldig emailadresse.',
  '{attribute} must be "{requiredValue}".' => '{attribute} skal være "{requiredValue}".',
  '{attribute} must be a number.' => '{attribute} skal være et nummer.',
  '{attribute} must be a string.' => '{attribute} skal være en tekst-streng.',
  '{attribute} must be an integer.' => '{attribute} skal være et heltal.',
  '{attribute} must be either "{true}" or "{false}".' => '{attribute} skal være enten "{true}" eller "{false}".',
  '{attribute} must be greater than "{compareValue}".' => '{attribute} skal være større end "{compareValue}".',
  '{attribute} must be greater than or equal to "{compareValue}".' => '{attribute} skal være større end eller lig med "{compareValue}".',
  '{attribute} must be less than "{compareValue}".' => '{attribute} skal være mindre end "{compareValue}".',
  '{attribute} must be less than or equal to "{compareValue}".' => '{attribute} skal være mindre end eller lig med "{compareValue}".',
  '{attribute} must be no greater than {max}.' => '{attribute} må ikke være større end {max}.',
  '{attribute} must be no less than {min}.' => '{attribute} må ikke være mindre end {min}.',
  '{attribute} must be repeated exactly.' => '{attribute} skal være gentaget præcist.',
  '{attribute} must not be equal to "{compareValue}".' => '{attribute} må ikke være lig med "{compareValue}".',
  '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.' => '{attribute} skal mindst indeholde {min, number} {min, plural, one{tegn} other{tegn}}.',
  '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.' => '{attribute} skal højst indeholde {max, number} {max, plural, one{tegn} other{tegn}}.',
  '{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.' => '{attribute} skal indeholde {length, number} {length, plural, one{tegn} other{tegn}}.',
  '{delta, plural, =1{a day} other{# days}} ago' => 'for {delta, plural, =1{en dag} other{# dage}} siden',
  '{delta, plural, =1{a minute} other{# minutes}} ago' => 'for {delta, plural, =1{et minut} other{# minutter}} siden',
  '{delta, plural, =1{a month} other{# months}} ago' => 'for {delta, plural, =1{en måned} other{# måneder}} siden',
  '{delta, plural, =1{a second} other{# seconds}} ago' => 'for {delta, plural, =1{et sekund} other{# sekunder}} siden',
  '{delta, plural, =1{a year} other{# years}} ago' => 'for {delta, plural, =1{et år} other{# år}} siden',
  '{delta, plural, =1{an hour} other{# hours}} ago' => 'for {delta, plural, =1{en time} other{# timer}} siden',
  '{n, plural, =1{# byte} other{# bytes}}' => '{n, plural, =1{# byte} other{# bytes}}',
  '{n, plural, =1{# gigabyte} other{# gigabytes}}' => '{n, plural, =1{# gigabyte} other{# gigabytes}}',
  '{n, plural, =1{# kilobyte} other{# kilobytes}}' => '{n, plural, =1{# kilobyte} other{# kilobytes}}',
  '{n, plural, =1{# megabyte} other{# megabytes}}' => '{n, plural, =1{# megabyte} other{# megabytes}}',
  '{n, plural, =1{# petabyte} other{# petabytes}}' => '{n, plural, =1{# petabyte} other{# petabytes}}',
  '{n, plural, =1{# terabyte} other{# terabytes}}' => '{n, plural, =1{# terabyte} other{# terabytes}}',
  '{n} B' => '{n} B',
  '{n} GB' => '{n} GB',
  '{n} KB' => '{n} KB',
  '{n} MB' => '{n} MB',
  '{n} PB' => '{n} PB',
  '{n} TB' => '{n} TB',
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";